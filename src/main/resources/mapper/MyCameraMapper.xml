<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoming.dao.MyCameraMapper">
  <resultMap id="BaseResultMap" type="com.xiaoming.model.MyCamera">
    <constructor>
      <idArg column="Camera_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Camera_Title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Camera_Type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Camera_near" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_Far" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_Visibility" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="Camera_Position_X" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_Position_Y" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_Position_Z" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_Up_X" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_Up_Y" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Cmaera_Up_Z" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_LookAt_X" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_LookAt_Y" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="Camera_LookAt_Z" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="scene_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Camera_field_of_view" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Camera_ID, Camera_Title, Camera_Type, Camera_near, Camera_Far, Camera_Visibility, 
    Camera_Position_X, Camera_Position_Y, Camera_Position_Z, Camera_Up_X, Camera_Up_Y, 
    Cmaera_Up_Z, Camera_LookAt_X, Camera_LookAt_Y, Camera_LookAt_Z, scene_id, Camera_field_of_view, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.xiaoming.model.MyCameraExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from camera
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from camera
    where Camera_ID = #{cameraId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from camera
    where Camera_ID = #{cameraId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoming.model.MyCameraExample">
    delete from camera
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoming.model.MyCamera">
    insert into camera (Camera_ID, Camera_Title, Camera_Type, 
      Camera_near, Camera_Far, Camera_Visibility, 
      Camera_Position_X, Camera_Position_Y, Camera_Position_Z, 
      Camera_Up_X, Camera_Up_Y, Cmaera_Up_Z, 
      Camera_LookAt_X, Camera_LookAt_Y, Camera_LookAt_Z, 
      scene_id, Camera_field_of_view, create_time, 
      update_time)
    values (#{cameraId,jdbcType=INTEGER}, #{cameraTitle,jdbcType=VARCHAR}, #{cameraType,jdbcType=VARCHAR}, 
      #{cameraNear,jdbcType=REAL}, #{cameraFar,jdbcType=REAL}, #{cameraVisibility,jdbcType=CHAR}, 
      #{cameraPositionX,jdbcType=REAL}, #{cameraPositionY,jdbcType=REAL}, #{cameraPositionZ,jdbcType=REAL}, 
      #{cameraUpX,jdbcType=REAL}, #{cameraUpY,jdbcType=REAL}, #{cmaeraUpZ,jdbcType=REAL}, 
      #{cameraLookatX,jdbcType=REAL}, #{cameraLookatY,jdbcType=REAL}, #{cameraLookatZ,jdbcType=REAL}, 
      #{sceneId,jdbcType=INTEGER}, #{cameraFieldOfView,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoming.model.MyCamera">
    insert into camera
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cameraId != null">
        Camera_ID,
      </if>
      <if test="cameraTitle != null">
        Camera_Title,
      </if>
      <if test="cameraType != null">
        Camera_Type,
      </if>
      <if test="cameraNear != null">
        Camera_near,
      </if>
      <if test="cameraFar != null">
        Camera_Far,
      </if>
      <if test="cameraVisibility != null">
        Camera_Visibility,
      </if>
      <if test="cameraPositionX != null">
        Camera_Position_X,
      </if>
      <if test="cameraPositionY != null">
        Camera_Position_Y,
      </if>
      <if test="cameraPositionZ != null">
        Camera_Position_Z,
      </if>
      <if test="cameraUpX != null">
        Camera_Up_X,
      </if>
      <if test="cameraUpY != null">
        Camera_Up_Y,
      </if>
      <if test="cmaeraUpZ != null">
        Cmaera_Up_Z,
      </if>
      <if test="cameraLookatX != null">
        Camera_LookAt_X,
      </if>
      <if test="cameraLookatY != null">
        Camera_LookAt_Y,
      </if>
      <if test="cameraLookatZ != null">
        Camera_LookAt_Z,
      </if>
      <if test="sceneId != null">
        scene_id,
      </if>
      <if test="cameraFieldOfView != null">
        Camera_field_of_view,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cameraId != null">
        #{cameraId,jdbcType=INTEGER},
      </if>
      <if test="cameraTitle != null">
        #{cameraTitle,jdbcType=VARCHAR},
      </if>
      <if test="cameraType != null">
        #{cameraType,jdbcType=VARCHAR},
      </if>
      <if test="cameraNear != null">
        #{cameraNear,jdbcType=REAL},
      </if>
      <if test="cameraFar != null">
        #{cameraFar,jdbcType=REAL},
      </if>
      <if test="cameraVisibility != null">
        #{cameraVisibility,jdbcType=CHAR},
      </if>
      <if test="cameraPositionX != null">
        #{cameraPositionX,jdbcType=REAL},
      </if>
      <if test="cameraPositionY != null">
        #{cameraPositionY,jdbcType=REAL},
      </if>
      <if test="cameraPositionZ != null">
        #{cameraPositionZ,jdbcType=REAL},
      </if>
      <if test="cameraUpX != null">
        #{cameraUpX,jdbcType=REAL},
      </if>
      <if test="cameraUpY != null">
        #{cameraUpY,jdbcType=REAL},
      </if>
      <if test="cmaeraUpZ != null">
        #{cmaeraUpZ,jdbcType=REAL},
      </if>
      <if test="cameraLookatX != null">
        #{cameraLookatX,jdbcType=REAL},
      </if>
      <if test="cameraLookatY != null">
        #{cameraLookatY,jdbcType=REAL},
      </if>
      <if test="cameraLookatZ != null">
        #{cameraLookatZ,jdbcType=REAL},
      </if>
      <if test="sceneId != null">
        #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="cameraFieldOfView != null">
        #{cameraFieldOfView,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoming.model.MyCameraExample" resultType="java.lang.Long">
    select count(*) from camera
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update camera
    <set>
      <if test="record.cameraId != null">
        Camera_ID = #{record.cameraId,jdbcType=INTEGER},
      </if>
      <if test="record.cameraTitle != null">
        Camera_Title = #{record.cameraTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.cameraType != null">
        Camera_Type = #{record.cameraType,jdbcType=VARCHAR},
      </if>
      <if test="record.cameraNear != null">
        Camera_near = #{record.cameraNear,jdbcType=REAL},
      </if>
      <if test="record.cameraFar != null">
        Camera_Far = #{record.cameraFar,jdbcType=REAL},
      </if>
      <if test="record.cameraVisibility != null">
        Camera_Visibility = #{record.cameraVisibility,jdbcType=CHAR},
      </if>
      <if test="record.cameraPositionX != null">
        Camera_Position_X = #{record.cameraPositionX,jdbcType=REAL},
      </if>
      <if test="record.cameraPositionY != null">
        Camera_Position_Y = #{record.cameraPositionY,jdbcType=REAL},
      </if>
      <if test="record.cameraPositionZ != null">
        Camera_Position_Z = #{record.cameraPositionZ,jdbcType=REAL},
      </if>
      <if test="record.cameraUpX != null">
        Camera_Up_X = #{record.cameraUpX,jdbcType=REAL},
      </if>
      <if test="record.cameraUpY != null">
        Camera_Up_Y = #{record.cameraUpY,jdbcType=REAL},
      </if>
      <if test="record.cmaeraUpZ != null">
        Cmaera_Up_Z = #{record.cmaeraUpZ,jdbcType=REAL},
      </if>
      <if test="record.cameraLookatX != null">
        Camera_LookAt_X = #{record.cameraLookatX,jdbcType=REAL},
      </if>
      <if test="record.cameraLookatY != null">
        Camera_LookAt_Y = #{record.cameraLookatY,jdbcType=REAL},
      </if>
      <if test="record.cameraLookatZ != null">
        Camera_LookAt_Z = #{record.cameraLookatZ,jdbcType=REAL},
      </if>
      <if test="record.sceneId != null">
        scene_id = #{record.sceneId,jdbcType=INTEGER},
      </if>
      <if test="record.cameraFieldOfView != null">
        Camera_field_of_view = #{record.cameraFieldOfView,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update camera
    set Camera_ID = #{record.cameraId,jdbcType=INTEGER},
      Camera_Title = #{record.cameraTitle,jdbcType=VARCHAR},
      Camera_Type = #{record.cameraType,jdbcType=VARCHAR},
      Camera_near = #{record.cameraNear,jdbcType=REAL},
      Camera_Far = #{record.cameraFar,jdbcType=REAL},
      Camera_Visibility = #{record.cameraVisibility,jdbcType=CHAR},
      Camera_Position_X = #{record.cameraPositionX,jdbcType=REAL},
      Camera_Position_Y = #{record.cameraPositionY,jdbcType=REAL},
      Camera_Position_Z = #{record.cameraPositionZ,jdbcType=REAL},
      Camera_Up_X = #{record.cameraUpX,jdbcType=REAL},
      Camera_Up_Y = #{record.cameraUpY,jdbcType=REAL},
      Cmaera_Up_Z = #{record.cmaeraUpZ,jdbcType=REAL},
      Camera_LookAt_X = #{record.cameraLookatX,jdbcType=REAL},
      Camera_LookAt_Y = #{record.cameraLookatY,jdbcType=REAL},
      Camera_LookAt_Z = #{record.cameraLookatZ,jdbcType=REAL},
      scene_id = #{record.sceneId,jdbcType=INTEGER},
      Camera_field_of_view = #{record.cameraFieldOfView,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoming.model.MyCamera">
    update camera
    <set>
      <if test="cameraTitle != null">
        Camera_Title = #{cameraTitle,jdbcType=VARCHAR},
      </if>
      <if test="cameraType != null">
        Camera_Type = #{cameraType,jdbcType=VARCHAR},
      </if>
      <if test="cameraNear != null">
        Camera_near = #{cameraNear,jdbcType=REAL},
      </if>
      <if test="cameraFar != null">
        Camera_Far = #{cameraFar,jdbcType=REAL},
      </if>
      <if test="cameraVisibility != null">
        Camera_Visibility = #{cameraVisibility,jdbcType=CHAR},
      </if>
      <if test="cameraPositionX != null">
        Camera_Position_X = #{cameraPositionX,jdbcType=REAL},
      </if>
      <if test="cameraPositionY != null">
        Camera_Position_Y = #{cameraPositionY,jdbcType=REAL},
      </if>
      <if test="cameraPositionZ != null">
        Camera_Position_Z = #{cameraPositionZ,jdbcType=REAL},
      </if>
      <if test="cameraUpX != null">
        Camera_Up_X = #{cameraUpX,jdbcType=REAL},
      </if>
      <if test="cameraUpY != null">
        Camera_Up_Y = #{cameraUpY,jdbcType=REAL},
      </if>
      <if test="cmaeraUpZ != null">
        Cmaera_Up_Z = #{cmaeraUpZ,jdbcType=REAL},
      </if>
      <if test="cameraLookatX != null">
        Camera_LookAt_X = #{cameraLookatX,jdbcType=REAL},
      </if>
      <if test="cameraLookatY != null">
        Camera_LookAt_Y = #{cameraLookatY,jdbcType=REAL},
      </if>
      <if test="cameraLookatZ != null">
        Camera_LookAt_Z = #{cameraLookatZ,jdbcType=REAL},
      </if>
      <if test="sceneId != null">
        scene_id = #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="cameraFieldOfView != null">
        Camera_field_of_view = #{cameraFieldOfView,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Camera_ID = #{cameraId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoming.model.MyCamera">
    update camera
    set Camera_Title = #{cameraTitle,jdbcType=VARCHAR},
      Camera_Type = #{cameraType,jdbcType=VARCHAR},
      Camera_near = #{cameraNear,jdbcType=REAL},
      Camera_Far = #{cameraFar,jdbcType=REAL},
      Camera_Visibility = #{cameraVisibility,jdbcType=CHAR},
      Camera_Position_X = #{cameraPositionX,jdbcType=REAL},
      Camera_Position_Y = #{cameraPositionY,jdbcType=REAL},
      Camera_Position_Z = #{cameraPositionZ,jdbcType=REAL},
      Camera_Up_X = #{cameraUpX,jdbcType=REAL},
      Camera_Up_Y = #{cameraUpY,jdbcType=REAL},
      Cmaera_Up_Z = #{cmaeraUpZ,jdbcType=REAL},
      Camera_LookAt_X = #{cameraLookatX,jdbcType=REAL},
      Camera_LookAt_Y = #{cameraLookatY,jdbcType=REAL},
      Camera_LookAt_Z = #{cameraLookatZ,jdbcType=REAL},
      scene_id = #{sceneId,jdbcType=INTEGER},
      Camera_field_of_view = #{cameraFieldOfView,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where Camera_ID = #{cameraId,jdbcType=INTEGER}
  </update>
</mapper>